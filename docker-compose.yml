version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: TasksManagementAPI/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=db;Database=TasksManagement;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;
    depends_on:
      - db
    networks:
      - tasks-network
    deploy:
      restart_policy:
        condition: on-failure

  worker:
    build:
      context: .
      dockerfile: TasksManagementReassignmentWorker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=TasksManagement;User Id=sa;Password=VeryStrongPassword@123;TrustServerCertificate=True;
      - QuartzOptions__CronSchedule=0 0/2 * * * ?
    depends_on:
      - db
    networks:
      - tasks-network
    deploy:
      restart_policy:
        condition: on-failure

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=VeryStrongPassword@123
      - MSSQL_PID=Express
    ports:
      - "1455:1433"
    volumes:
      - mssqldata:/var/opt/mssql
    networks:
      - tasks-network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  tasks-network:
    driver: bridge

volumes:
  mssqldata: